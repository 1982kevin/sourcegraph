// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ErrorAlert should add a prefix if given 1`] = `
<ErrorAlert
  error={[Error: an error happened]}
  history="[History]"
  prefix="An error happened"
>
  <div
    className="alert alert-danger"
  >
    <AlertCircleIcon
      className="icon icon-inline"
    />
     
    <strong>
      An error happened
      :
    </strong>
     
    <ErrorMessage
      error={[Error: an error happened]}
      history="[History]"
    >
      <Markdown
        dangerousInnerHTML="An error happened"
        history="[History]"
        wrapper="span"
      >
        <span
          className="markdown"
          dangerouslySetInnerHTML={
            Object {
              "__html": "An error happened",
            }
          }
          onClick={[Function]}
        />
      </Markdown>
    </ErrorMessage>
  </div>
</ErrorAlert>
`;

exports[`ErrorAlert should omit the icon if icon={false} 1`] = `
<ErrorAlert
  error={[Error: an error happened]}
  history="[History]"
  icon={false}
>
  <div
    className="alert alert-danger"
  >
     
     
    <ErrorMessage
      error={[Error: an error happened]}
      history="[History]"
    >
      <Markdown
        dangerousInnerHTML="An error happened"
        history="[History]"
        wrapper="span"
      >
        <span
          className="markdown"
          dangerouslySetInnerHTML={
            Object {
              "__html": "An error happened",
            }
          }
          onClick={[Function]}
        />
      </Markdown>
    </ErrorMessage>
  </div>
</ErrorAlert>
`;

exports[`ErrorAlert should render a Go multierror nicely 1`] = `
<ErrorAlert
  error={
    [Error: - Additional property asdasd is not allowed
- projectQuery.0: String length must be greater than or equal to 1
]
  }
  history="[History]"
>
  <div
    className="alert alert-danger"
  >
    <AlertCircleIcon
      className="icon icon-inline"
    />
     
     
    <ErrorMessage
      error={
        [Error: - Additional property asdasd is not allowed
- projectQuery.0: String length must be greater than or equal to 1
]
      }
      history="[History]"
    >
      <Markdown
        dangerousInnerHTML="<ul>
<li>Additional property asdasd is not allowed</li>
<li>projectQuery.0: String length must be greater than or equal to 1</li>
</ul>"
        history="[History]"
        wrapper="span"
      >
        <span
          className="markdown"
          dangerouslySetInnerHTML={
            Object {
              "__html": "<ul>
<li>Additional property asdasd is not allowed</li>
<li>projectQuery.0: String length must be greater than or equal to 1</li>
</ul>",
            }
          }
          onClick={[Function]}
        />
      </Markdown>
    </ErrorMessage>
  </div>
</ErrorAlert>
`;

exports[`ErrorAlert should render an Error object as an alert 1`] = `
<ErrorAlert
  error={[Error: an error happened]}
  history="[History]"
>
  <div
    className="alert alert-danger"
  >
    <AlertCircleIcon
      className="icon icon-inline"
    />
     
     
    <ErrorMessage
      error={[Error: an error happened]}
      history="[History]"
    >
      <Markdown
        dangerousInnerHTML="An error happened"
        history="[History]"
        wrapper="span"
      >
        <span
          className="markdown"
          dangerouslySetInnerHTML={
            Object {
              "__html": "An error happened",
            }
          }
          onClick={[Function]}
        />
      </Markdown>
    </ErrorMessage>
  </div>
</ErrorAlert>
`;
